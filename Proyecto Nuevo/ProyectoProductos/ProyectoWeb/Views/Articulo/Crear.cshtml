@model ProyectoWeb.ViewModel.ArticuloViewModel.CrearViewModel
@{
    ViewBag.Title = "Crear";
}
@*CARGA DE SCRIPT PARA FUNCIONALIDADES*@
<script src="~/Scripts/articuloCrear.js"></script>

<div class="row">
    <h2>Articulo Nuevo</h2>

    @using (Html.BeginForm("Crear", "Articulo", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        //Seguridad
        @Html.AntiForgeryToken()

        //Lista de errores
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        //Mensajes
        if (Model.mensajeError != null && !Model.mensajeError.Equals(""))
        {
                <span class="label label-danger">@Model.mensajeError</span>
        }

        //************************************************************************
        //MANEJO DE IMAGENES
        //************************************************************************
        <h3>Selección de imagenes</h3>
        for (var i = 1; i <= 5; i++)
        {
            var s = "Archivo" + @i;
            var s1 = "ImgArchivo" + @i;
            var s3 = "EliminarArchivo" + @i;
            <div class="col-md-2">
                <div class="thumbnail">
                    <img src=@("/Imagenes/Articulos/SinImagen.jpg") id="@s1" onclick="$(@s).click()" height="150" width="150" />                
                    
                    <div class="caption">
                        <label class="checkbox-inline">
                            <input class="check-box" data-val="true" data-val-required="El campo EliminarArchivo1 es obligatorio." id="@s3" name="@s3" type="checkbox" value="true" />                            
                            Eliminar
                        </label>
                    </div>
                    <input name="@s3" type="hidden" value="false" />
                </div>
            </div>
        }
        
        <input type="file" style="display:none;" name="Archivo1" id="Archivo1" onchange="$(mostrarImagen(this));">
        <input type="file" style="display:none;" name="Archivo2" id="Archivo2" onchange="$(mostrarImagen(this));">
        <input type="file" style="display:none;" name="Archivo3" id="Archivo3" onchange="$(mostrarImagen(this));">
        <input type="file" style="display:none;" name="Archivo4" id="Archivo4" onchange="$(mostrarImagen(this));">
        <input type="file" style="display:none;" name="Archivo5" id="Archivo5" onchange="$(mostrarImagen(this));">

        <div class="clearfix"></div>
        //************************************************************************
        //FIN MANEJO DE IMAGENES
        //************************************************************************
        //************************************************************************
        //MANEJO DE PROPIEDADES BASICAS
        //************************************************************************
        <br>
        <div class="form-group">
            @Html.LabelFor(x => x.Codigo, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Codigo, new { @id = "codigo", @class = "form-control", @placeholder = "Código" })
            @Html.ValidationMessageFor(x => x.Codigo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Nombre, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Nombre, new { @id = "nombre", @class = "form-control", @placeholder = "Nombre" })
            @Html.ValidationMessageFor(x => x.Nombre, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Descripcion, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Descripcion, new { @id = "descripcion", @class = "form-control", @placeholder = "Descripción" })
            @Html.ValidationMessageFor(x => x.Descripcion, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Precio, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Precio, new { @id = "precio", @class = "form-control", @placeholder = "Precio" })
            @Html.ValidationMessageFor(x => x.Precio, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Stock, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Stock, new { @id = "stock", @class = "form-control", @placeholder = "Stock" })
            @Html.ValidationMessageFor(x => x.Stock, "", new { @class = "text-danger" })
        </div>

        

        <div class="form-group">
            <label class="checkbox-inline">
                @Html.CheckBoxFor(x => x.Destacado, new { @id = "destacado" })
                Destacado
            </label>            
        </div>

        <div class="form-group">
            <label class="checkbox-inline">
                @Html.CheckBoxFor(x => x.Disponible, new { @id = "disponible" })
                Disponible
            </label>            
        </div>
        //************************************************************************
        //FIN MANEJO DE PROPIEDADES BASICAS
        //************************************************************************
        
        //************************************************************************
        //MANEJO DE CATEGORIAS
        //************************************************************************
        <h3>Categorías</h3>
        <div>
            <input type="hidden" id="CadenaCategorias" name="CadenaCategorias">
            <div>
                @foreach (var c in Model.Categorias)
                {                  
                    <label class="checkbox-inline">
                    <input class="categorias" type="checkbox" id="ChkCat_@c.Id" name="@c.Nombre" value="@c.Id">
                    @c.Nombre
                    </label>
                }
            </div>
        </div>
        //************************************************************************
        //FIN MANEJO DE CATEGORIAS
        //************************************************************************
        
        //************************************************************************
        //MANEJO DE FILTROS
        //************************************************************************
        <h3>Filtros</h3>
        <div>
            <input type="hidden" id="CadenaFiltros" name="CadenaFiltros">
            <div>
                <h4>Material</h4>
                @foreach (var f in Model.Filtros)
                {
                    if (!f.Color)
                    {                        
                        <label class="checkbox-inline">
                        <input class="filtros" type="checkbox" id="ChkFil_@f.Id" name="@f.Nombre" value="@f.Id">
                        @f.Nombre
                        </label>
                    }
                }
            </div>
            <br>
            <div>
                <h4>Color</h4>
                @foreach (var f1 in Model.Filtros)
                {
                    if (f1.Color)
                    {                        
                        <label class="checkbox-inline">
                        <input class="filtros" type="checkbox" id="ChkFil_@f1.Id" name="@f1.Nombre" value="@f1.Id">
                        @f1.Nombre
                        </label>   
                    }
                }
            </div>
        </div>
        <br>
        //************************************************************************
        //FIN MANEJO DE FILTROS
        //************************************************************************
        <br>
        <button type="submit" class="btn btn-lg btn-primary">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Guardar
        </button>
    }
</div>
