@model ProyectoWeb.ViewModel.ClienteViewModel.EditarViewModel
@{
    ViewBag.Title = "Editar";
}

<script src="~/Scripts/clienteCrearEditar.js"></script>

<div class="row">
    @if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
    {
        <div class="col-md-2 pull-left">
            <div>
                <h3>Gestión</h3>
                @Html.ActionLink("Gestión Administradores", "ListaAdministradores", "Administrador")<br />
                @Html.ActionLink("Gestión Clientes", "ListaClientes", "Cliente")<br />
                @Html.ActionLink("Gestión Artículos", "ListaArticulos", "Articulo")<br />
                @Html.ActionLink("Gestión Categorías", "ListaCategorias", "Categoria")<br />
                @Html.ActionLink("Gestión Pedidos", "Historico", "Pedido")<br />
                @Html.ActionLink("Configuración", "Editar", "Configuracion")
            </div>
        </div>
    }
    
    <div class="col-md-10 ">
        <div class="clearfix"></div>
        <h2>Editar</h2>
        <h3>@(Model.cliente.NombreUsuario)</h3>
        <br>
        @using (Html.BeginForm("Editar", "Cliente", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            //Seguridad
            @Html.AntiForgeryToken()

            @Html.HiddenFor(x => x.cliente.Id)
            @*@Html.HiddenFor(x => x.cliente.Password)*@
            @Html.HiddenFor(x => x.ImgAnterior)

            //Lista de errores
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            //Mensajes
            if (Model.mensajeError != null && !Model.mensajeError.Equals(""))
            {
                <div class="alert alert-danger" role="alert">@Model.mensajeError</div>
            }

            <div class="col-xs-8 col-sm-5 col-md-2">
                <div class="thumbnail">
                    <img src=@("/Imagenes/Clientes/" + Model.cliente.Foto) id="ImgArchivo" onclick="$('#Archivo').click()" style="width:100%; height:100%;" />
                </div>
            </div>

            <input type="file" style="display:none;" name="Archivo" id="Archivo" onchange="$(mostrarImagen(this));">

            <div class="clearfix"></div>
            <br>
            <div class="form-group">
                @Html.LabelFor(x => x.NombreUsuario, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.NombreUsuario, new { @id = "nombreUsuario", @class = "form-control", @placeholder = "Nombre Usuario" })
                @Html.ValidationMessageFor(x => x.NombreUsuario, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.NombreFantasia, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.NombreFantasia, new { @id = "nombreFantasia", @class = "form-control", @placeholder = "Nombre Fantasía" })
                @Html.ValidationMessageFor(x => x.NombreFantasia, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Rut, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.Rut, new { @id = "rut", @class = "form-control", @placeholder = "Rut" })
                @Html.ValidationMessageFor(x => x.Rut, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.RazonSocial, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.RazonSocial, new { @id = "razSoc", @class = "form-control", @placeholder = "Razón Social" })
                @Html.ValidationMessageFor(x => x.RazonSocial, "", new { @class = "text-danger" })
            </div>

            if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.Descuento, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(x => x.Descuento, new { @id = "descuento", @class = "form-control", @placeholder = "% Descuento" })
                    @Html.ValidationMessageFor(x => x.Descuento, "", new { @class = "text-danger" })
                </div>
            }
            else {
                @Html.HiddenFor(x => x.Descuento)
            }

            <div class="form-group">
                @Html.LabelFor(x => x.DiasDePago, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.DiasDePago, new { @id = "diasPago", @class = "form-control", @placeholder = "Dias de Pago" })
                @Html.ValidationMessageFor(x => x.DiasDePago, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Direccion, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.Direccion, new { @id = "dir", @class = "form-control", @placeholder = "Dirección" })
                @Html.ValidationMessageFor(x => x.Direccion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Telefono, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.Telefono, new { @id = "tel", @class = "form-control", @placeholder = "Teléfono" })
                @Html.ValidationMessageFor(x => x.Telefono, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.NombreDeContacto, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.NombreDeContacto, new { @id = "nombreContacto", @class = "form-control", @placeholder = "Nombre de Contacto" })
                @Html.ValidationMessageFor(x => x.NombreDeContacto, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.TelefonoDeContacto, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.TelefonoDeContacto, new { @id = "telContacto", @class = "form-control", @placeholder = "Teléfono de Contacto" })
                @Html.ValidationMessageFor(x => x.TelefonoDeContacto, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.EmailContacto, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.EmailContacto, new { @id = "emailContacto", @class = "form-control", @placeholder = "Email de Contacto" })
                @Html.ValidationMessageFor(x => x.EmailContacto, "", new { @class = "text-danger" })
            </div>
            <div>
                <a title="CambiarPassword" href="~/Cliente/CambiarPass/@Model.cliente.Id">
                    <span class="glyphicon glyphicon-lock" aria-hidden="true"></span> Cambiar Contraseña
                </a>
            </div>
            <br>
            <button type="submit" class="btn btn-primary">
                <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Guardar
            </button>
        }
    </div>
</div>



