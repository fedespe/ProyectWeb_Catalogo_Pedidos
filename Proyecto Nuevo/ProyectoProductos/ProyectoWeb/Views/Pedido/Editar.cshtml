@model ProyectoWeb.ViewModel.PedidoViewModel.EditarViewModel
@{
    ViewBag.Title = "Edición del Pedido";
}

@*CARGA DE SCRIPT PARA FUNCIONALIDADES*@
<script src="~/Scripts/pedidoEditar.js"></script>

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Editar", "Pedido", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    //Seguridad
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.Pedido.Id)

    //Lista de errores
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    if (Session["TipoUsuario"].ToString().Equals("Administrador"))
    {
        <div class="form-group">
            @Html.DropDownListFor(model => model.IdCliente, Model.Clientes, new { htmlAttributes = new { @class = "form-control", @id = "ddlNombreFantasiaCliente" } })
            @*@Html.ValidationMessageFor(x => x.Cliente.NombreFantasia, "", new { @class = "text-danger" })*@
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.FechaRealizado, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.FechaRealizado, new { @id = "fechaRealizado", @class = "form-control", @placeholder = "Fecha Realizado" })
            @*@Html.ValidationMessageFor(x => x.FechaRealizado, "", new { @class = "text-danger" })*@
        </div>
    }
    else
    {
        @Html.TextBoxFor(x => x.Cliente.NombreFantasia, new { @id = "txtNombreFantasiaCliente", @class = "form-control", @placeholder = "Nombre Fantasia Cliente", @readonly = "readonly" })
        @*@Html.ValidationMessageFor(x => x.Cliente.NombreFantasia, "", new { @class = "text-danger" })*@
    }

    <div class="form-group">
        @Html.LabelFor(x => x.FechaEntregaSolicitada, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(x => x.FechaEntregaSolicitada, new { @id = "fechaEntregaSolicitada", @class = "form-control", @placeholder = "Fecha Entrega Solicitada" })
        @*@Html.ValidationMessageFor(x => x.FechaEntregaSolicitada, "", new { @class = "text-danger" })*@
    </div>

    <table id="tablaPedidos" class="table table-striped">
        <thead>
            <tr>
                <th>Imagen</th>
                <th>Codigo Articulo</th>
                <th>Nombre Articulo</th>
                <th>Cantidad</th>
                <th>$ Unitario</th>
                <th>$ Total Linea</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var pp in Model.Pedido.ProductosPedidos)
            {
                double precioTotal = pp.Cantidad * pp.PrecioUnitario;

                <tr>
                    <td>
                        <img src=@("/Imagenes/Articulos/" +  pp.Articulo.Imagenes[0].Img ) height="100" width="100" />
                    </td>
                    <td>@pp.Articulo.Codigo</td>
                    <td>@pp.Articulo.Nombre</td>
                    <td>@pp.Cantidad</td>
                    <td>@pp.PrecioUnitario</td>
                    <td>@precioTotal</td>
                    <td><a title="Eliminar" onclick="{ Eliminar(this.parentNode.parentNode.rowIndex); }" >Eliminar</a></td>  @*href="~/Pedido/EliminarArticulo/@pp.Articulo.Id"*@
                </tr>
            }
        </tbody>
    </table>

    if (Model.Pedido.Cliente.Descuento > 0)
    {
        <div class="form-group">
            @Html.LabelFor(x => x.Descuento, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.Descuento, new { @id = "descuentoCliente", @class = "form-control", @placeholder = "Descuento del Cliente", @readonly = "readonly" })
            @*@Html.ValidationMessageFor(x => x.DescuentoCliente, "", new { @class = "text-danger" })*@
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(x => x.Pedido.PrecioTotal, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(x => x.Pedido.PrecioTotal, new { @id = "precioTotal", @class = "form-control", @placeholder = "Precio Total", @readonly = "readonly" })
        @*@Html.ValidationMessageFor(x => x.PrecioTotal, "", new { @class = "text-danger" })*@
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Comentario, htmlAttributes: new { @class = "control-label" })
        @Html.TextAreaFor(x => x.Comentario, new { @id = "comentario", @class = "form-control", @placeholder = "Comentario" })
        @*@Html.ValidationMessageFor(x => x.Comentario, "", new { @class = "text-danger" })*@
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.EstadoPedido, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(x => x.EstadoPedido, new { @id = "estadoPedido", @class = "form-control", @readonly = "readonly" })
        @*@Html.ValidationMessageFor(x => x.Estado.Nombre, "", new { @class = "text-danger" })*@
    </div>

    <button type="submit" class="btn btn-default">Guardar</button>
}