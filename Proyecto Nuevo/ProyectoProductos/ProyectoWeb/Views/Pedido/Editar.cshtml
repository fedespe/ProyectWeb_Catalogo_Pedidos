@model ProyectoWeb.ViewModel.PedidoViewModel.EditarViewModel
@{
    ViewBag.Title = "Edición del Pedido";
}

@*CARGA DE SCRIPT PARA FUNCIONALIDADES*@
<script src="~/Scripts/pedidoEditar.js"></script>

<div class="row">
    <h2>Editar Pedido</h2>
    <br>

    @using (Html.BeginForm("Editar", "Pedido", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        //Seguridad
        @Html.AntiForgeryToken()

        @Html.HiddenFor(x => x.IdPedido)
        @Html.HiddenFor(x => x.CadenaArticulos)
        @Html.HiddenFor(x => x.IdCliente)


        @Html.HiddenFor(x => x.Descuento, new { @id = "descuentoCliente" });
   

        //Lista de errores
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        if (Session["TipoUsuario"].ToString().Equals("Administrador"))
        {
            <div class="form-group">
                @Html.DropDownListFor(model => model.IdCliente, Model.Clientes, new { @class = "selectpicker form-control", @id = "ddlNombreFantasiaCliente" })
                @*@Html.ValidationMessageFor(x => x.Cliente.NombreFantasia, "", new { @class = "text-danger" })*@
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.FechaRealizado, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.FechaRealizado, "{0:dd/MM/yyyy}", new { @id = "fechaRealizado", @class = "form-control", @placeholder = "Fecha Realizado" })
                @*@Html.ValidationMessageFor(x => x.FechaRealizado, "", new { @class = "text-danger" })*@
            </div>
        }
        else
        {
            @Html.TextBoxFor(x => x.Pedido.Cliente.NombreFantasia, new { @id = "txtNombreFantasiaCliente", @class = "form-control", @placeholder = "Nombre Fantasia Cliente", @readonly = "readonly" })
            @*@Html.ValidationMessageFor(x => x.Pedido.Cliente.NombreFantasia, "", new { @class = "text-danger" })*@
        }

        <div class="form-group">
            @Html.LabelFor(x => x.FechaEntregaSolicitada, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.FechaEntregaSolicitada, "{0:dd/MM/yyyy}", new { @id = "fechaEntregaSolicitada", @class = "form-control", @placeholder = "Fecha Entrega Solicitada" })
            @*@Html.ValidationMessageFor(x => x.FechaEntregaSolicitada, "", new { @class = "text-danger" })*@
        </div>
        
        <table id="tablaPedidos" class="table table-hover" style="text-align:center">
            <thead>
                <tr>
                    <th hidden>IdArticulo</th>
                    <th style="text-align:center">Imagen</th>
                    <th style="text-align:center">Codigo Articulo</th>
                    <th style="text-align:center">Nombre Articulo</th>
                    <th style="text-align:center">Cantidad</th>
                    <th style="text-align:center">$ Unitario (Iva inc.)</th>
                    <th style="text-align:center">$ Total Linea (Iva inc.)</th>
                    <th style="text-align:center">Acciones</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var pp in Model.Pedido.ProductosPedidos)
                {
                    double varPrecioTotal = pp.Cantidad * pp.PrecioUnitario;

                    <tr>
                        <td hidden>@pp.Articulo.Id</td>
                        <td style="vertical-align:middle">
                            <img src=@("/Imagenes/Articulos/" +  pp.Articulo.Imagenes[0].Img ) height="100" width="100" />
                        </td>
                        <td style="vertical-align:middle"><a title="Confirmar" href="~/Catalogo/DetalleArticulo/@pp.Articulo.Id"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> @pp.Articulo.Codigo</a></td>
                        <td style="vertical-align:middle">@pp.Articulo.Nombre</td>
                        <td style="vertical-align:middle"><input type="number" class="form-control" value="@pp.Cantidad" style="text-align:center;" onchange="actualizarTotales();" /></td>
                        <td style="vertical-align:middle">@pp.PrecioUnitario</td>
                        <td style="vertical-align:middle">@varPrecioTotal</td>
                        <td style="vertical-align:middle"><a title="Eliminar" onclick="Eliminar(this.parentNode.parentNode.rowIndex);">Eliminar</a></td>
                    </tr>
                }
                @if (Model.Pedido.DescuentoCliente > 0)
                {
                <tr>
                    <td hidden></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td style="vertical-align:middle" ><h4 id="celdaTextoPrecioDescuento"></h4></td>
                    <td style="vertical-align:middle" ><h4 id="celdaPrecioDescuento"></h4></td>
                    <td></td>
                </tr>
                }
                <tr>
                    <td hidden></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td style="vertical-align:middle" ><h2>Monto Total (Iva inc.): </h2></td>
                    <td style="vertical-align:middle" ><h2 id="celdaPrecioTotal"></h2></td>
                    <td></td>
                </tr>
            </tbody>
        </table>

        <div class="form-group">
            @Html.LabelFor(x => x.Comentario, htmlAttributes: new { @class = "control-label" })
            @Html.TextAreaFor(x => x.Comentario, new { @id = "comentario", @class = "form-control", @placeholder = "Comentario" })
            @*@Html.ValidationMessageFor(x => x.Comentario, "", new { @class = "text-danger" })*@
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.EstadoPedido, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(x => x.EstadoPedido, new { @id = "estadoPedido", @class = "form-control", @readonly = "readonly" })
            @*@Html.ValidationMessageFor(x => x.Estado.Nombre, "", new { @class = "text-danger" })*@
        </div>

        if (Model.EstadoPedido.Equals("EN CONSTRUCCION"))
        {
            <label class="checkbox-inline" style="font-size:large;padding:5px; padding-left:30px;padding-right:20px; border-radius:5px;border: thin solid #bbbbbb;">
                @Html.CheckBoxFor(x => x.RealizarPedido)
                Realizar Pedido
            </label>
            <br>
        }
        <br>
        <button type="submit" class="btn btn-lg btn-primary" onclick="GuardarCambios();">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Guardar Cambios
        </button>

        if (Session["TipoUsuario"].ToString().Equals("Cliente"))
        {
            if (Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR") || Model.Pedido.Estado.Nombre.Equals("CONFIRMADO POR CLIENTE"))
            {
                <a title="Cancelar" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/Cancelar/@Model.Pedido.Id">Cancelar</a>
            }
        }
        else if (Session["TipoUsuario"].ToString().Equals("Administrador"))
        {
            if (Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR") || Model.Pedido.Estado.Nombre.Equals("CONFIRMADO POR CLIENTE"))
            {
                <a title="Confirmar" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/Confirmar/@Model.Pedido.Id">Confirmar</a>
            }
            if (Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR") || Model.Pedido.Estado.Nombre.Equals("CONFIRMADO POR CLIENTE"))
            {
                <a title="Cancelar" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/Cancelar/@Model.Pedido.Id">Cancelar</a>
            }
        }
    }
</div>