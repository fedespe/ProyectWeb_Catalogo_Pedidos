@model ProyectoWeb.ViewModel.PedidoViewModel.EditarViewModel
@{
    ViewBag.Title = "Edición del Pedido";
}

@*CARGA DE SCRIPT PARA FUNCIONALIDADES*@
<script src="~/Scripts/pedidoEditar.js"></script>

<div class="row">
    <div class="col-xs-12">
        <h1 class="col-xs-2">Editar Pedido</h1>               

        @using (Html.BeginForm("Editar", "Pedido", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            //Seguridad
            @Html.AntiForgeryToken()

            @Html.HiddenFor(x => x.IdPedido)
            @Html.HiddenFor(x => x.CadenaArticulos)
            @*@Html.HiddenFor(x => x.IdCliente)*@
            <input type="hidden" id="IdCliente" name="IdCliente" value="@Model.IdCliente">
            @Html.HiddenFor(x => x.idClienteSeleccionado)
            @Html.HiddenFor(x => x.Iva)

            @Html.HiddenFor(x => x.Descuento, new { @id = "descuentoCliente" });

            //Lista de errores
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" id="CadenaFiltros" name="CadenaFiltros">

            if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
            {
                if (Model.EstadoPedido.Equals("EN CONSTRUCCION"))
                {
                    //Autocomplete Cliente
                    <div class="form-group">
                        <label for="autocompleteCliente" class="control-label">Cliente</label>
                        <input id="autocompleteCliente" type="text" class="form-control" onclick="AbrirAutocomplete(); $('#mensajeModelo').html(''); $('#confirmarPedido').html(''); $('#mensajeCambio').attr('class', 'alert alert-warning'); $('#mensajeCambio').html('IMPORTANTE: Se han realizado cambios en el pedido. Guarde los cambios para evitar pérdida de información.');">
                    </div>
                }
                else
                {
                    <h3>@Model.Pedido.Cliente.NombreFantasia</h3>
                    <br>
                }

                <div class="form-group">
                    <label for="FechaRealizado" class="control-label">Fecha de Realización</label>
                    <input type="date" class="form-control cambio" id="FechaRealizado" name="FechaRealizado">
                </div>
                if (!Model.FechaRealizado.Equals(Convert.ToDateTime("01/01/0001")))
                {
                    string dia = Convert.ToString(Model.FechaRealizado.Day);
                    if (Model.FechaRealizado.Day < 10) { dia = "0" + Model.FechaRealizado.Day; }
                    string mes = Convert.ToString(Model.FechaRealizado.Month);
                    if (Model.FechaRealizado.Month < 10) { mes = "0" + Model.FechaRealizado.Month; }
                    string anio = Convert.ToString(Model.FechaRealizado.Year);
                    if (Model.FechaRealizado.Year < 10) { anio = "0" + Model.FechaRealizado.Year; }
                    string s = anio + "-" + mes + "-" + dia;
                    <script>
                        $('#FechaRealizado').val('@s');
                    </script>
                }
            }
            else
            {
                @Html.HiddenFor(x => x.FechaRealizado)
                @Html.HiddenFor(x => x.Pedido.Cliente.NombreFantasia)
                <h3>@Model.Pedido.Cliente.NombreFantasia</h3>
                <br>
            }
            <div class="form-group">
                <label for="FechaEntregaSolicitada" class="control-label">Fecha de Entrega</label>
                <input type="date" class="form-control cambio" id="FechaEntregaSolicitada" name="FechaEntregaSolicitada">
            </div>
            if (!Model.FechaEntregaSolicitada.Equals(Convert.ToDateTime("01/01/0001")))
            {
                string dia = Convert.ToString(Model.FechaEntregaSolicitada.Day);
                if (Model.FechaEntregaSolicitada.Day < 10) { dia = "0" + Model.FechaEntregaSolicitada.Day; }
                string mes = Convert.ToString(Model.FechaEntregaSolicitada.Month);
                if (Model.FechaEntregaSolicitada.Month < 10) { mes = "0" + Model.FechaEntregaSolicitada.Month; }
                string anio = Convert.ToString(Model.FechaEntregaSolicitada.Year);
                if (Model.FechaEntregaSolicitada.Year < 10) { anio = "0" + Model.FechaEntregaSolicitada.Year; }
                string s = anio + "-" + mes + "-" + dia;
                <script>
                    $('#FechaEntregaSolicitada').val('@s');
                </script>
            }

            <div id="mensajeModelo">
                @if (Model.mensajeError != null && !Model.mensajeError.Equals(""))
                {
                    <div class="alert alert-danger" role="alert">@Model.mensajeError</div>
                }
                @if (Model.mensajeSuccess != null && !Model.mensajeSuccess.Equals(""))
                {
                    <div class="alert alert-success" role="alert">@Model.mensajeSuccess</div>
                }
            </div>
            //Mensaje
            <div class="" role="alert" id="mensajeCambio"></div>            

            <table id="tablaPedidos" class="table table-hover" style="text-align:center">
                <thead>
                    <tr>
                        <th hidden>IdArticulo</th>
                        <th style="text-align:center">Imagen</th>
                        <th style="text-align:center">Código Artículo</th>
                        <th style="text-align:center">Nombre Artículo</th>
                        <th style="text-align:center">Cantidad</th>
                        <th style="text-align:center">Opciones</th>
                        <th style="text-align:center">$ Unitario (Iva inc.)</th>
                        <th style="text-align:center">$ Total Línea (Iva inc.)</th> 
                        @if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
                        {
                            <th style="text-align:center">Stock</th>
                        }                  
                        <th style="text-align:center">Acciones</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var pp in Model.Pedido.ProductosPedidos)
                    {
                        var s2 = pp.Articulo.Id + ";" + pp.Id;
                        double varPrecioTotal = pp.Cantidad * pp.PrecioUnitario;

                        <tr>
                            <td hidden>@s2</td>
                            <td style="vertical-align:middle">
                                <img src=@("/Imagenes/Articulos/" + pp.Articulo.Imagenes[0].Img ) height="100" width="100" />
                            </td>
                            <td style="vertical-align:middle"><a title="Ver" href="~/Catalogo/DetalleArticulo/@pp.Articulo.Id"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> @pp.Articulo.Codigo</a></td>
                            <td style="vertical-align:middle">@pp.Articulo.Nombre</td>
                            <td style="vertical-align:middle"><input type="number" class="form-control cambio" value="@pp.Cantidad" style="text-align:center;" onchange="actualizarTotales();" /></td>
                            <td style="vertical-align:middle; text-align:left">
                                @*<div class="btn-group">
                                <button data-toggle="dropdown" class="btn dropdown-toggle" data-placeholder="Please select">Checked option <span class="caret"></span></button>
                                <ul class="dropdown-menu">*@
                                @foreach (ET.Filtro f in pp.Articulo.Filtros)
                                {
                                    var s1 = f.Id + ";" + pp.Id;
                                    var sId = f.Id + "" + pp.Id;
                                    <label class="checkbox-inline">
                                        <input class="filtros cambio" type="checkbox" id="ChkFil_@sId" name="@pp.Id" value="@s1">
                                        @f.Nombre
                                    </label>
                                    <br>
                                    //if (pp.Articulo.Filtros.Contains(f))
                                    if (Model.FiltrosSeleccionados.Count != 0)
                                    {
                                        for (int i = 0; i < Model.FiltrosSeleccionados.Count; i++)
                                        {
                                            if (Model.FiltrosSeleccionados.ElementAt(i).Id == pp.Id)
                                            {
                                                if (Model.FiltrosSeleccionados.ElementAt(i).Articulo.Filtros.Contains(f))
                                                {
                                                    <script>
                                                    cargarFiltrosAnteriores(@sId);
                                                    function cargarFiltrosAnteriores(filId) {
                                                        var s = "#ChkFil_" + filId;
                                                        $(s).prop("checked", true);
                                                        var sVal = $(s).val();
                                                        var anterior = $('#CadenaFiltros').val();
                                                        $('#CadenaFiltros').val(anterior + sVal + ";" + "true ");
                                                    }
                                                    </script>
                                                }
                                                i = Model.FiltrosSeleccionados.Count;
                                            }

                                        }
                                    }
                                    @*<li><input type="checkbox" id="ChkFil_@s1" class="filtros" value="@s1" name="@pp.Id"><label for="ChkFil_@s1" name="NAME" value="VALUE" >@f.Nombre</label></li>*@
                                }
                                @*</ul>
                                </div>*@
                            </td>
                            <td style="vertical-align:middle">@pp.PrecioUnitario.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)</td>
                            <td style="vertical-align:middle">@varPrecioTotal.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)</td>   
                            @if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
                            {
                                <td style="vertical-align:middle">@pp.Articulo.Stock</td>
                            }                     
                            <td style="vertical-align:middle"><a title="Eliminar" onclick="Eliminar(this.parentNode.parentNode.rowIndex);$('#confirmarPedido').html('');">Eliminar</a></td>
                        </tr>
                    }
                    <tr>
                        <td hidden></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td style="vertical-align:middle"><div style="font-size:large">IVA</div></td>
                        <td style="vertical-align:middle"><div style="font-size:large" id="celdaTextoPrecioIVA"></div></td>
                        <td style="vertical-align:middle"><div style="font-size:large" id="celdaPrecioIVA"></div></td>
                        <td></td>
                        @if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
                        {
                            <td></td>
                        }
                    </tr>
                    @if (Model.Pedido.DescuentoCliente > 0 || (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador")))
                    {
                    <tr>
                        <td hidden></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td style="vertical-align:middle"><div style="font-size:large">Descuento cliente preferencial</div></td>
                        <td style="vertical-align:middle" ><div style="font-size:large" id="celdaTextoPrecioDescuento"></div></td>
                        <td style="vertical-align:middle" ><div style="font-size:large" id="celdaPrecioDescuento"></div></td>
                        <td></td>
                        @if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
                        {
                            <td></td>
                        } 
                    </tr>
                    }
                    <tr>
                        <td hidden></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td style="vertical-align:middle"><div style="font-size:xx-large">Monto Total</div></td>
                        <td style="vertical-align:middle" >@*<h4>(IVA inc.) </h4>*@</td>
                        <td style="vertical-align:middle" ><div style="font-size:xx-large" id="celdaPrecioTotal"></div></td>
                        <td></td>
                        @if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
                        {
                            <td></td>
                        } 
                    </tr>
                </tbody>
            </table>

            <div>
                @{
                    if (Model.ComentarioAnterior != null && !Model.ComentarioAnterior.Trim().Equals(""))
                    {
                        string[] comentarios = Model.ComentarioAnterior.Trim().Split('|');
                        foreach (string s in comentarios)
                        {
                            <p>
                                @s
                            </p>
                        }
                    }
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Comentario, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(x => x.Comentario, new { @id = "comentario", @class = "form-control cambio", @placeholder = "Comentario" })
                @*@Html.ValidationMessageFor(x => x.Comentario, "", new { @class = "text-danger" })*@
            </div>
            <br>
            @Html.HiddenFor(x => x.EstadoPedido)
            if (Model.EstadoPedido.Equals("EN CONSTRUCCION"))
            {
                <div style="font-size:x-large">Estado: EN CONSTRUCCIÓN</div>
            }
            else {
                <div style="font-size:x-large">Estado: @Model.EstadoPedido</div>
            }

            <br>
                  
            if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
            {
                if (Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR"))
                {                   
                    <div id="confirmarPedido">
                        <button id="btnConfirmar" type="button" class="btn btn-lg btn-success" onclick="ConfirmarPedido(@Model.Pedido.Id)">
                            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Confirmar Pedido
                        </button>
                        @*<a title="Confirmar" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/Confirmar/@Model.Pedido.Id">Confirmar</a>*@
                    </div>                   
                }else if(!Model.EstadoPedido.Equals("EN CONSTRUCCION")){
                    <div class="alert alert-warning" role="alert">Debe guardar los cambios para poder confirmar el pedido.</div>
                }
            }
                    
            if (Model.EstadoPedido.Equals("EN CONSTRUCCION"))
            {
                <br>
                <label class="checkbox-inline" style="font-size:large">
                    @Html.CheckBoxFor(x => x.RealizarPedido)
                    Realizar Pedido
                </label>
                <br>               
            }      

            if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Cliente"))
            {
                if (Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR") || Model.Pedido.Estado.Nombre.Equals("CONFIRMADO POR CLIENTE"))
                {
                    <br>
                    <button id="btnGuardarCambios" type="submit" class="btn btn-primary" onclick="GuardarCambios();">
                        <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Confirmar Pedido
                    </button>
                    <a title="Cancelar" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/Cancelar/@Model.Pedido.Id">Cancelar</a>
                }else{
                    <br>
                    <button id="btnGuardarCambios" type="submit" class="btn btn-primary" onclick="GuardarCambios();">
                        <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Guardar Cambios
                    </button>
                }
            }
            else if (Session["TipoUsuario"] != null && Session["TipoUsuario"].ToString().Equals("Administrador"))
            {
                <br>
                <button id="btnGuardarCambios" type="submit" class="btn btn-primary" onclick="GuardarCambios();">
                    <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Guardar Cambios
                </button>
                @*if (Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR") /*|| Model.Pedido.Estado.Nombre.Equals("CONFIRMADO POR CLIENTE")*/)
                {
                    <a title="Confirmar" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/Confirmar/@Model.Pedido.Id">Confirmar</a>
                }*@
                if (/*Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR") || Model.Pedido.Estado.Nombre.Equals("CONFIRMADO POR CLIENTE") || */Model.Pedido.Estado.Nombre.Equals("CONFIRMADO"))
                {
                    <a title="MarcarRealiado" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/MarcarRealizado/@Model.Pedido.Id">Marcar Realizado</a>
                }
                if (Model.Pedido.Estado.Nombre.Equals("MODIFICADO POR ADMINISTRADOR") || Model.Pedido.Estado.Nombre.Equals("CONFIRMADO POR CLIENTE"))
                {
                    <a title="Cancelar" onclick="return confirm('¿Esta seguro?');" href="~/Pedido/Cancelar/@Model.Pedido.Id">Cancelar</a>
                }
            }            

        }   
        <script>
            $(document).on("click", ".filtros", function (event) {
                var anterior = $('#CadenaFiltros').val();
                $('#CadenaFiltros').val(anterior + event.target.value + ";" + event.target.checked + " ");
                //alert($('#CadenaFiltros').val());
            });
            $(document).on("change", ".cambio", function (event) {
                $('#mensajeModelo').html("");
                $('#confirmarPedido').html("");
                $('#mensajeCambio').attr("class", "alert alert-warning");
                $('#mensajeCambio').html('IMPORTANTE: Se han realizado cambios en el pedido. Guarde los cambios para evitar pérdida de información.');
            });
            function ConfirmarPedido(data) {
                if (!isNaN(data) && data > 0) {
                    var s3 = "/Pedido/Confirmar/" + data;
                    window.location = s3;
                }
                else {
                    alert("Error.");
                }
            }
        </script>
    </div>
</div>

@section AutoComplete {
    <link href="~/Content/jquery-ui-1.12.1.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.12.4.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
}